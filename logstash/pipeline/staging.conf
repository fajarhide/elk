input {
	beats {
		port => 5000
	}
}

## Add your filters / logstash plugins configuration here
filter {
    if [fields][log_type] == "access_staging" {
    	grok {
        	match => [ "message" , "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}"]
       		overwrite => [ "message" ]
    }
    	mutate {
        	convert => ["response", "integer"]
        	convert => ["bytes", "integer"]
        	convert => ["responsetime", "float"]
    }
   	geoip {
        	source => "clientip"
        	target => "geoip"
        	add_tag => [ "nginx-geoip" ]
    }
    	date {
        	match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
        	remove_field => [ "timestamp" ]
    }
    	useragent {
        	source => "agent"
    	}
    } else if [fields][log_type] == "error_staging" {
				grok {
   					match => { "message" => ["(?<timestamp>%{YEAR}[./]%{MONTHNUM}[./]%{MONTHDAY} %{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER:threadid}\: \*%{NUMBER:connectionid} %{GREEDYDATA:errormessage}, client: %{IP:client}, server: %{GREEDYDATA:server}, request: %{GREEDYDATA:request}"]}
   					overwrite => [ "message" ]
				}
 				date {
   					match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
   					remove_field => [ "timestamp" ]
 				}
    }
}

output {
 elasticsearch {
   hosts => ["elasticsearch:9200"]
   index => "%{[fields][log_type]}-%{+YYYY.MM.dd}"
 }
 stdout { codec => rubydebug }
}
